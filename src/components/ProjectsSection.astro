---
// ProjectsSection.astro - Composant pour afficher la liste des projets
import { Image } from 'astro:assets';
import imageSvg from '../assets/image.svg';
import rivaImg from '../assets/projects/riva.png';
import advrImg from '../assets/projects/advr.png';
import elecImg from '../assets/projects/elec66.png';
---

<section id="projects" class="projects-section">
  <div class="container">
    <p class="subtitle">La passion nous mènent ici</p>
    <h2 class="title">Mes différents projets</h2>
    
    <div class="projects-list">
      <div class="project-item" data-project="riva">
        <a href="https://riva-solution.com" target="_blank" rel="noopener noreferrer" class="project-link">
          <div class="project-number">01.</div>
          <div class="project-title">Riva Solutions</div>
          <div class="project-image">
            <Image src={imageSvg} alt="Riva Solutions" width={50} height={50} />
          </div>
        </a>
        <div class="hover-image">
          <Image src={rivaImg} alt="Riva Solutions Project" width={300} height={200} />
        </div>
      </div>
      
      <div class="project-item" data-project="advr">
        <a href="https://advr66.fr" target="_blank" rel="noopener noreferrer" class="project-link">
          <div class="project-number">02.</div>
          <div class="project-title">ADVR 66</div>
          <div class="project-image">
            <Image src={imageSvg} alt="ADVR 66" width={50} height={50} />
          </div>
        </a>
        <div class="hover-image">
          <Image src={advrImg} alt="ADVR 66 Project" width={300} height={200} />
        </div>
      </div>
      
      <div class="project-item" data-project="elec">
        <a href="https://elec66.fr" target="_blank" rel="noopener noreferrer" class="project-link">
          <div class="project-number">03.</div>
          <div class="project-title">Elec 66</div>
          <div class="project-image">
            <Image src={imageSvg} alt="Elec 66" width={50} height={50} />
          </div>
        </a>
        <div class="hover-image">
          <Image src={elecImg} alt="Elec 66 Project" width={300} height={200} />
        </div>
      </div>
      
      <div class="project-item" data-project="coming-soon">
        <div class="project-number">04.</div>
        <div class="project-title">Prochainement ..</div>
        <div class="project-image">
          <Image src={imageSvg} alt="Prochainement" width={50} height={50} />
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .projects-section {
    padding: 4rem 100px;
  }
  
  .container {
    max-width: 100%;
    margin: 0 auto;
  }
  
  .subtitle {
    text-align: center;
    color: #666;
    margin-bottom: 0.5rem;
    font-size: 1rem;
  }
  
  .title {
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: 3rem;
    font-weight: 600;
  }
  
  .projects-list {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }
  
  .project-item {
    display: grid;
    grid-template-columns: auto 1fr auto;
    grid-template-areas: 
      "number title image"
      "number description image";
    gap: 1rem;
    padding: 1.5rem 0;
    border-bottom: 1px solid #eaeaea;
    position: relative;
    cursor: pointer;
  }
  
  .project-number {
    grid-area: number;
    font-size: 1.25rem;
    font-weight: 600;
    padding-right: 2rem;
  }
  
  .project-title {
    grid-area: title;
    font-size: 1.5rem;
    font-weight: 600;
  }
  
  .project-description {
    grid-area: description;
    color: #666;
    max-width: 80%;
  }
  
  .project-image {
    grid-area: image;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .project-image img {
    max-width: 100%;
    height: auto;
  }
  
  /* Responsive styles */
  .project-link {
    display: contents; /* Ceci permet aux enfants de participer au grid layout du parent */
    text-decoration: none; /* Supprime le soulignement des liens */
    color: inherit;
  }
  
  @media (max-width: 768px) {
    .projects-section {
      padding: 4rem 20px;
    }
    
    .project-item {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }
    
    .project-description {
      max-width: 100%;
    }
    
    /* Créer un conteneur pour le numéro et le titre */
    .project-item::before {
      content: "";
      display: flex;
      flex-direction: row;
      align-items: center;
      margin-bottom: 0.5rem;
    }
    
    .project-number {
      padding-right: 0.75rem;
      float: left;
      margin-top: 0;
    }
    
    .project-title {
      margin-top: 0;
      margin-left: 0;
      display: inline-block;
    }
    
    .project-image {
      display: none;
    }
    
    .hover-image {
      position: static;
      opacity: 1;
      visibility: visible;
      width: 100%;
      max-width: none;
      margin-top: 1rem;
      box-shadow: 0 3px 10px rgba(0,0,0,0.1);
      pointer-events: auto;
    }
    
    .hover-image img {
      width: 100%;
      height: auto;
      object-fit: cover;
    }
  }
  
  @media (max-width: 480px) {
    .title {
      font-size: 2rem;
    }
    
    .project-number, .project-title {
      font-size: 1.25rem;
    }
  }
  
  .hover-image {
    position: fixed;
    width: 300px;
    height: auto;
    pointer-events: none;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease;
    z-index: 100;
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    border-radius: 4px;
    overflow: hidden;
  }
  
  .hover-image img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const projectItems = document.querySelectorAll('.project-item');
    const isMobile = window.innerWidth <= 768;
    
    projectItems.forEach(item => {
      const hoverImage = item.querySelector('.hover-image');
      const projectLink = item.querySelector('.project-link');
      
      // Sur mobile, on affiche directement les images sans animation
      if (isMobile && hoverImage) {
        hoverImage.style.position = 'static';
        hoverImage.style.opacity = '1';
        hoverImage.style.visibility = 'visible';
        hoverImage.style.pointerEvents = 'auto';
        hoverImage.style.width = '100%';
        hoverImage.style.maxWidth = '300px';
        hoverImage.style.marginTop = '1rem';
      } else {
        // Sur desktop, on garde le comportement de hover normal
        const handleMouseEnter = () => {
          if (hoverImage) {
            hoverImage.style.opacity = '1';
            hoverImage.style.visibility = 'visible';
          }
        };
        
        const handleMouseMove = (e) => {
          if (hoverImage) {
            // Position the image near the cursor but ensure it stays in viewport
            const x = e.clientX + 20;
            const y = e.clientY + 20;
            
            // Adjust position to keep image in viewport
            const viewportWidth = window.innerWidth;
            const viewportHeight = window.innerHeight;
            const imageWidth = 300;
            const imageHeight = hoverImage.offsetHeight;
            
            let posX = x;
            let posY = y;
            
            if (x + imageWidth > viewportWidth) {
              posX = x - imageWidth - 40;
            }
            
            if (y + imageHeight > viewportHeight) {
              posY = y - imageHeight - 40;
            }
            
            hoverImage.style.left = `${posX}px`;
            hoverImage.style.top = `${posY}px`;
          }
        };
        
        const handleMouseLeave = () => {
          if (hoverImage) {
            hoverImage.style.opacity = '0';
            hoverImage.style.visibility = 'hidden';
          }
        };
        
        // Appliquer les événements à l'élément parent et au lien
        item.addEventListener('mouseenter', handleMouseEnter);
        item.addEventListener('mousemove', handleMouseMove);
        item.addEventListener('mouseleave', handleMouseLeave);
        
        if (projectLink) {
          projectLink.addEventListener('mouseenter', handleMouseEnter);
          projectLink.addEventListener('mousemove', handleMouseMove);
          projectLink.addEventListener('mouseleave', handleMouseLeave);
        }
      }
    });
  });
</script>